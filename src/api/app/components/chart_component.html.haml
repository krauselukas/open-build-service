- if raw_data.size.positive?
  .m-4
    .mb-4
      .btn.btn-outline-primary.float-end{ onclick: 'updateChartBuildResults()', accesskey: 'r', title: 'Refresh Chart Build Results' }
        Refresh
        %i.fas.fa-sync-alt{ id: 'chart-build-reload' }
      %h4
        Build Results Summary
    - if distinct_repositories.size > ChartComponent::MINIMUM_DISTINCT_BUILD_REPOSITORIES || raw_data.size > ChartComponent::MINIMUM_BUILD_RESULTS
      = column_chart( chart_data,
                      width: '100%',
                      height: '300px',
                      stacked: true,
                      responsive: true,
                      colors: ['#008000', '#DC3545', '#FFCC00', '#EEEEEE'],
                      library: { scales: { y: { ticks: { stepSize: 1 }}}},
                    )
    - else
      %div
        .row.align-items-center.mb-2
          .col-12.d-flex.justify-content-center
            .border.d-flex.flex-wrap.gap-1.p-2.small
              %b.me-2= 'Build status legend:'
              = legend
        .row.p-2.ps-1
          %b.col-3= Repository
          %b.col-9= Architecture
        - distinct_repositories.each do |repo|
          .row.p-1.align-items-center
            .col-3
              = repo
            .col-9.d-flex.flex-wrap.gap-1.justify-content-start
              - raw_data.each do |result|
                - if result[:repository] == repo
                  = link_to(result[:architecture], request_build_results_path(bs_request_number, "package_#{result[:package_name]}": 1,
                            "repo_#{repo}": 1, "arch_#{result[:architecture]}": 1, "status_#{result[:status]}": 1),
                            class: "btn btn-#{status_color(result[:status])} btn-sm ps-2 pe-2 align-self-start",
                            title: "#{result[:project_name]}/#{result[:package_name]}")
